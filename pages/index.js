/* eslint-disable jsx-a11y/alt-text */
/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import { useEffect, useState } from 'react';
import Link from 'next/link'
import { useStoreActions } from 'easy-peasy';
import { FaTrash } from 'react-icons/fa';

export default function Home({dataPost,dataComment,dataUsers,photoData}) {
  const addTodo = useStoreActions((actions) => actions.addTodo);
  const addComment = useStoreActions((actions)=>actions.addComment);
  const[statePost,setStatePost] = useState();
  const[stateComment,setStateComment] = useState();
  const [stateUser,setStateUser] = useState();
  const [statePhoto,setStatePhoto] = useState();

  let num = [];
  let post_id = 1;
  let count = 0;

  let commentArray = []
  stateComment?.map(data=>{
    if(data?.postId==post_id){
      count++;
    }else{
      num.push(count);
      count=1;
      post_id++;
    }
  })

  let userName = [];
  let users = []

  stateUser?.map(data=>{
    userName.push(data.username);
    users.push(data);
  })

  let photo = [];

  statePhoto?.map(data=>{
    photo.push(data.thumbnailUrl);
  })

  useEffect(()=>{
    setStatePost(dataPost);
    setStateComment(dataComment);
    setStateUser(dataUsers);
    setStatePhoto(photoData);
  },[dataPost,dataComment,dataUsers,photoData])

  const removeElement = (id) =>{
    setStatePost((current)=> current.filter((p)=>p.id !==id))
  }
  console.log(statePost);
  return (
    <div>
      <Head>
        <title>Next Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>
        {statePost?.slice(0, 20)?.map(info=>{
          let comment = num[info.id - 1] ;
          let username = userName[info.userId - 1];
          let user = users[info.userId - 1];
          let photoURL = photo[info.userId - 1]; 
          
          return(
            <div key={info.id} className="p-10">  
              <div className="max-w-sm rounded overflow-hidden shadow-lg">
                <div className="px-6 py-4">
                  <div className='flex flex-row justify-between'>
                    <div className="font-bold text-xl mb-2">PostId : {info.id} UserId : {info.userId}</div>
                    <button onClick={()=>removeElement(info.id)}><FaTrash /></button>
                  </div>
                  <Link onClick={()=>{addTodo(info);addComment(stateComment)}} href={{pathname:`/post/${info.userId}`,query:user}} className="text-gray-700 text-base cursor-pointer">Post Title :  {info.title}</Link>
                </div>
                <div className="px-6 pt-4 pb-2">
                <span className="inline-block bg-gray-200  text-sm font-semibold text-gray-700 mr-2"><img src={photoURL} width='20px' /></span>
                  <span className="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">Author Name : {username}</span>
                  <span className="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">{comment} comments</span>
                </div>
              </div>
            </div>
          )
          
        })}
      </div>

    </div>
  )
}

export async function getServerSideProps(context) {
  const posts = await fetch(`https://jsonplaceholder.typicode.com/posts`)
  const dataPost = await posts.json()

  const comments = await fetch(`https://jsonplaceholder.typicode.com/comments`)
  const dataComment = await comments.json()

  const users = await fetch(`https://jsonplaceholder.typicode.com/users`);
  const dataUsers = await users.json();

  const usersPhoto = await fetch(`https://jsonplaceholder.typicode.com/photos`);
  const photoData = await usersPhoto.json();


  return {
    props: { dataPost,dataComment,dataUsers,photoData }
  }
}
